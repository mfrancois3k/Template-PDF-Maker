
const bearerToken = 'YOUR_TOKEN';
const templateId  = 'YOUR_TEMPLATE_ID'; 


let bufferList = [];

request.get({
  url : 'https://render.carbone.io/template/' + templateId,
  headers : {
    'Authorization': 'Bearer ' + bearerToken,
    'carbone-version': '3'
  }
}).on('response', (response) => {
  if (response.statusCode !== 200) {
    // File is not found
    return;
  }

}).on('data', (data) => {
  bufferList.push(data);
}).on('end', () => {
  fs.writeFileSync('./my-file.odt', Buffer.concat(bufferList));
}).on('error', () => {
  // Handle network error
});

// use covertTemplateToPdfByID to render  the pdf
convertTemplateToPdfByID(
    "5e9f8f8f-f8f8-4f8f-8f8f-8f8f8f8f8f8f",
    "5e9f8f8f-f8f8-4f8f-8f8f-8f8f8f8f8f8f"
    )
    .then((data) => {
        console.log(data);
    })
    .catch((err) => {
        console.log(err);
    });



// add
const report = "./templates/report.odt";
const options = {
    // set the output format to PDF
    outputFormat: "pdf",
    // set the output file name
    outputFileName: "report.pdf",
    // set the output file path
    outputFilePath: "./templates/",
      // set the output file encoding
      outputFileEncoding: "utf-8",
      // set the output file type
      outputFileType: "pdf",
      // set the output file size
      outputFileSize: "A4",
      // set the output file orientation
      outputFileOrientation: "portrait",
      // set the output file margin
      outputFileMargin: "1cm",
      // set the output file page size
      outputFilePageSize: "A4",
      // set the output file page orientation
      outputFilePageOrientation: "portrait",
      // set the output file page margins
      outputFilePageMargins: "1cm",
      // set the output file page margins
      outputFilePageMargin: "1cm"

};



// template source file
const template = "";

// rendered report file
const report = "";

// options object is used to pass more parameters to carbone render function
const options = {
  convertTo: "pdf", // can be docx, txt, etc.
    outputFileName: "report.pdf", // output file name
    outputFilePath: "./templates/", // output file path
    outputFileEncoding: "utf-8", // output file encoding
    outputFileType: "pdf", // output file type
    outputFileSize: "A4", // output file size
    outputFileOrientation: "portrait", // output file orientation
    outputFileMargin: "1cm", // output file margin
    outputFilePageSize: "A4", // output file page size
    outputFilePageOrientation: "portrait", // output file page orientation
    outputFilePageMargins: "1cm" // output file page margins

};

const renderPdf = (data) => {
  carbone.render(template, data, options, (err, res) => {
    if (err) {
      return console.log(err);
    }

    // fs is used to create the PDF file from the render result
    fs.writeFileSync(report, res);
    process.exit();
  });
};


        const emptyRenderXMLOptions = {};
        const renderXMLOptions = {
            ...emptyRenderXMLOptions,
            complement: data,
            formatters
        };
        
        carbone.set(emptyOptions);

        
carbone.set(emptyOptions);
carbone.set(options);
carbone.reset();

carbone.addFormatters(formatters);


const simpleRender = () => {
  // data object to inject
  const data = {
    now_application_guid: "ed04d734-80f3-4aba-8fc0-ecefdcf65cca",
    now_number: "0",
    mine_guid: "c7f28868-02b9-4cef-a077-873623bc82a6",
    mine_name: "Matthews PLC",
    mine_no: "31871563",
    mine_region: "NW",
  };

    renderPdf(data);
};

simpleRender();

const emptyRenderXMLOptions = {};
const renderXMLOptions = {
    ...emptyRenderXMLOptions,
    complement: data,
    formatters
};